<div class="container">
    <div class="row valign-wrapper">
        <div class="col s11">
            <form>
                <div class="input-field">
                    <i class="material-icons prefix">search</i>
                    <input id="search" onkeyup="Buscando()" type="text" placeholder="Buscar...">
                </div>
            </form>
        </div>
    </div>
    <div class="row" id="lotes">
      
    </div>
  
    <!-- MODAL -->
    <div id="modal_editar_material" class="modal">
        <div class="modal-content">
          <span id="NomeLote"></span>
            <form>
              <div class="row">
                <div class="input-field col s12">
                  <input id="quantidade" min="0" type="number" class="validate" required>
                  <label for="quantidade">Quantidade</label>
                </div>
              </div>
              <div id="DialogText"></div>
            </form>
        </div>
        <div class="modal-footer">
            <button type="button" class="modal-close waves-effect waves-light btn red darken-1" id="botao_cadastrar">
                <i class="material-icons left">check</i>
                <span>Retirar</span>
            </button>
        </div>
      
        <script>
          var materiais;
          var lotes;
          
          var IDLote;
          function saidaLote(id, Nome)
          {
            document.getElementById("NomeLote").innerHTML = "<h3>Retirando o material:</h3><h4>" + Nome + "</h4>";
            IDLote = id;
          }
          
          var MateriaisELotes = new Array();
          function formataDados(){
            totMat = materiais.length;
            MateriaisSemLotes = new Array();
            for(m = 0; m < totMat; m++){
              MatLot = lotes.filter(Lot => Lot.Material.MATE_NAME.toUpperCase().includes(materiais[m].MATE_NAME.toUpperCase()) && Lot.LOT_QUANTITY > 0);
              if(MatLot.length > 0){
                MateriaisELotes.push({
                  MATE_ID: materiais[m].MATE_ID,
                  MATE_NAME: materiais[m].MATE_NAME,
                  MATE_OBSERVATION: materiais[m].MATE_OBSERVATION,
                  MATE_ACTIVE: materiais[m].MATE_ACTIVE,
                  MATE_LOTS: MatLot
                });
              }
              else{
                MateriaisSemLotes.push({
                  MATE_ID: materiais[m].MATE_ID,
                  MATE_NAME: materiais[m].MATE_NAME,
                  MATE_OBSERVATION: materiais[m].MATE_OBSERVATION,
                  MATE_ACTIVE: materiais[m].MATE_ACTIVE,
                  MATE_LOTS: MatLot
                });
              }
            }
            MateriaisELotes = MateriaisELotes.concat(MateriaisSemLotes);
            //console.log(MateriaisELotes);
          }
          
          function Buscando(){
            var Encontrados = MateriaisELotes.filter(Material => Material.MATE_NAME.toUpperCase().includes(document.getElementById("search").value.toUpperCase()));
            var Encontrados = Encontrados.filter(Material => Material.MATE_ACTIVE == true);
            var Codigo = "<h5>Não há dados de Lotes.</h5>";
            size = Encontrados.length;
            if(size > 0){
              Codigo = `<table class="borderless"><thead><tr><th>Material</th><th style='float: right;'>Quantidade Total</th></tr></thead></table><ul class='collapsible expandable listrado'>`
              
              for(c = 0; c < size; c++){
                totalEstoque = retornaTotalEstoque(Encontrados[c].MATE_LOTS);
                Codigo += `<li><div class='collapsible-header listradoFilho'>
                            <i class='material-icons'>arrow_drop_down</i>
                            <table class="borderless">
                            <tbody>
                            <tr><td><span>${Encontrados[c].MATE_NAME}</span></td><td><span style='float: right;'>${totalEstoque}</span></td></tr>
                            </tbody>
                            </table>
                            </div>`;
                if(totalEstoque > 0) {
                Codigo += `<div class='collapsible-body'>
                              <table class='striped'>
                                <thead><tr><th>Número do Lote</th><th>Quantidade</th><th>Validade</th></tr></thead>
                                ${retornaLotesFormatados(Encontrados[c].MATE_NAME, Encontrados[c].MATE_LOTS)}
                              </table>
                            </div>
                          </li>`;
                }
              else{
                Codigo += `<div class='collapsible-body'>
                              Esse material não possui estoque suficiente.
                          </div>
                          </li>`;
              }
                //<tr><td><span>${Encontrados[c].MATE_LOTS[0].LOT_ID}</span></td><td><span>${Encontrados[c].MATE_LOTS[0].LOT_QUANTITY}</span></td><td><span>${(Encontrados[c].MATE_LOTS[0].LOT_VALIDITY === null ? ' ' : Encontrados[c].MATE_LOTS[0].LOT_VALIDITY)}</span></td></tr>
              }
              
              Codigo += "</ul>";
            }
            
            function retornaLotesFormatados(nome, lotes){
              //console.log("Lotes: ", lotes);
              let lotesStr = "";
              let tot = lotes.length;
              for(l = 0; l < tot; l++)
              {
                data = new Date(lotes[l].LOT_VALIDITY);
                data = `${data.getDate()+1}/${data.getMonth()+1}/${data.getFullYear()}`;
                lotesStr += `<tr><td><span>${lotes[l].LOT_ID}</span></td><td><span>${lotes[l].LOT_QUANTITY}</span></td><td><span>${(lotes[l].LOT_VALIDITY === null ? ' ' : data)}</span></td>       <td><button data-target='modal_editar_material' data-target="modal_saida_lote" onclick="saidaLote(${lotes[l].LOT_ID}, '${nome}')" class='material-icons grey darken-4 btn modal-trigger waves-effect waves-light1'>exit_to_app</button></td>      </tr>`;
              }
              return lotesStr;
            }
            
            function retornaTotalEstoque(lotes){
              let estoque = 0;
              let tot = lotes.length;
              for(l = 0; l < tot; l++){
                  estoque += parseInt(lotes[l].LOT_QUANTITY);
              }
              return estoque;
            }
            
            
            document.getElementById("lotes").innerHTML = Codigo;
            $('.collapsible').collapsible({accordion: false}); // precisa ter essa linha atualizar o collapsible
          }
          
          
          function dataAtualFormatada()
          {
              var data = new Date(),
                  dia  = data.getDate().toString().padStart(2, '0'),
                  mes  = (data.getMonth()+1).toString().padStart(2, '0'), //+1 pois no getMonth Janeiro começa com zero.
                  ano  = data.getFullYear();
              return dia+"/"+mes+"/"+ano;
          }
          
          $("#data_atual").val("Data Atual: " + dataAtualFormatada());
          
          $(document).ready(function () 
          {
            $('select').formSelect();
            $('.modal').modal({ dismissible: false });
            $('.datepicker').datepicker({minDate: new Date(),
                                         format: 'yyyy-mm-dd'});
            
            $.get('materiais', (data) => {
              //console.log('materiais: ', data);
              materiais = data;
              var Codigo = {};
              Codigo.data = {};
              
              //var Codigo = "{";
              for(c = 0; c < materiais.length; c++)
              {
                Codigo.data[materiais[c].MATE_NAME.replace(/\"/g, "")] = null;
              }
              
              $('input.autocomplete').autocomplete(
                Codigo
              );
              
              $.get('lots', (data) => {
                //console.log('lotes: ',data);
                lotes = data;
                formataDados(); // formatarDados dos materiais e lotes
                Buscando();
              });
              
            });
          });
          
          $('#botao_cadastrar').on('click', function () 
          {
            var Error = "";
            var data = {
                LOT_ID: IDLote,
                QTD: $("#quantidade").val()
              };
            
            if($("#quantidade").val() > 0)
            {
              $.ajax({
              url: "Retirar",
              type : 'POST',
              data : JSON.stringify(data),
              contentType: 'application/json',
              beforeSend : function(){
                    Swal.fire({
                      title: 'Retirando Material...',
                      timer: 1000,
                      onBeforeOpen: () => 
                      {
                        Swal.showLoading()
                      },
                      onClose: () => 
                      {
                        //clearInterval(timerInterval)
                      }
                    })
                  }
                  })
              .done(function(msg)
              {
                console.log('RESPOSTA DA INSERÇÃO: ', msg);
                $("#DialogText").html(msg);
              })
              .fail(function(jqXHR, textStatus, msg)
              {
                alert(msg);
              });
            }
            else
            {
              Error = "Quantidade invalida."
            }
            
            if(Error.length > 0)
            {
              Swal.fire(
                {
                  position: 'center',
                  type: 'error',
                  title: Error,
                  showConfirmButton: true,
                  timer: 3500,
                  onClose: () => {
                    $("#btcadastrar").trigger('click');
                  }
                });
            }
          });
          
        </script>
    </div>
</div>